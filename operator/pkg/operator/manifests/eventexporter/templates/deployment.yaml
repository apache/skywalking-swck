# Licensed to Apache Software Foundation (ASF) under one or more contributor
# license agreements. See the NOTICE file distributed with
# this work for additional information regarding copyright
# ownership. Apache Software Foundation (ASF) licenses this file to you under
# the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Name }}-eventexporter
  namespace: {{ .Namespace }}
  labels:
    app: eventexporter
    operator.skywalking.apache.org/eventexporter-name: {{ .Name }}
    operator.skywalking.apache.org/application: eventexporter
    operator.skywalking.apache.org/component: deployment
spec:
  replicas: {{ .Spec.Instances }}
  selector:
    matchLabels:
      operator.skywalking.apache.org/eventexporter-name: {{ .Name }}
  template:
    metadata:
      labels:
        operator.skywalking.apache.org/eventexporter-name: {{ .Name }}
        operator.skywalking.apache.org/application: eventexporter
        operator.skywalking.apache.org/component: pod
    spec:
      serviceAccountName: {{ .Name }}-eventexporter
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app: eventexporter
                    operator.skywalking.apache.org/eventexporter-name: {{ .Name }}
      containers:
        - name: eventexporter
          image: {{ .Spec.Image }}
          imagePullPolicy: IfNotPresent
          args:
            - start
            - -v=debug
            - -c=/data/config.yaml
          volumeMounts:
            - mountPath: /data
              name: config
      volumes:
        - name: config
          configMap:
            name: {{ .Name }}-eventexporter
