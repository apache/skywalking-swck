# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  check:
    name: Check
    runs-on: ubuntu-20.04
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14
          id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Check License
        uses: apache/skywalking-eyes@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update dependencies
        run: GOPROXY=https://proxy.golang.org go mod download
      - name: Lint
        run: make lint
      - name: Check
        run: make check
  build:
    name: Build
    strategy:
      matrix:
        go-version: [ 1.14.x, 1.15.x ]
    runs-on: ubuntu-20.04
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Update dependencies 
        run: GOPROXY=https://proxy.golang.org go mod download
      - name: Build
        run: make
      - name: Build docker image
        run: make docker-build
  unit-tests:
    name: Unit tests
    runs-on: ubuntu-20.04
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Update dependencies
        run: GOPROXY=https://proxy.golang.org go mod download
      - name: "install kubebuilder"
        run: ./hack/install-kubebuilder.sh
      - name: tests
        run: make test
  checks:
    name: build
    runs-on: ubuntu-20.04
    needs: [check, build, unit-tests]
    steps:
      - run: echo 'success'
