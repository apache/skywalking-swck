# Licensed to Apache Software Foundation (ASF) under one or more contributor
# license agreements. See the NOTICE file distributed with
# this work for additional information regarding copyright
# ownership. Apache Software Foundation (ASF) licenses this file to you under
# the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.


---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: uis.operator.skywalking.apache.org
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.version
    description: The version
    name: Version
    priority: 1
    type: string
  - JSONPath: .spec.instances
    description: The number of expected instance
    name: Instances
    type: string
  - JSONPath: .status.availableReplicas
    description: The number of running
    name: Running
    type: string
  - JSONPath: .status.internalAddress
    description: The address of OAP server
    name: InternalAddress
    type: string
  - JSONPath: .status.externalIPs
    description: The address of OAP server
    name: ExternalIPs
    type: string
  - JSONPath: .status.ports
    description: The address of OAP server
    name: Ports
    type: string
  - JSONPath: .spec.image
    name: Image
    priority: 1
    type: string
  group: operator.skywalking.apache.org
  names:
    kind: UI
    listKind: UIList
    plural: uis
    singular: ui
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: UI is the Schema for the uis API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: UISpec defines the desired state of UI
          properties:
            OAPServerAddress:
              description: Backend OAP server address
              type: string
            image:
              description: Image is the UI Docker image to deploy.
              type: string
            instances:
              description: Count is the number of UI pods
              format: int32
              type: integer
            service:
              description: Service relevant settings
              properties:
                ingress:
                  description: Ingress defines the behavior of an ingress
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations is an unstructured key value map stored
                        with a resource that may be set by external tools to store
                        and retrieve arbitrary metadata. They are not queryable and
                        should be preserved when modifying objects.
                      type: object
                    host:
                      description: Host is the fully qualified domain name of a network
                        host, as defined by RFC 3986. Note the following deviations
                        from the "host" part of the URI as defined in RFC 3986
                      type: string
                    ingressClassName:
                      description: IngressClassName is the name of the IngressClass
                        cluster resource. The associated IngressClass defines which
                        controller will implement the resource. This replaces the
                        deprecated `kubernetes.io/ingress.class` annotation. For backwards
                        compatibility, when that annotation is set, it must be given
                        precedence over this field. The controller may emit a warning
                        if the field and annotation have different values. Implementations
                        of this API should ignore Ingresses without a class specified.
                        An IngressClass resource may be marked as default, which can
                        be used to set a default value for this field. For more information,
                        refer to the IngressClass documentation.
                      type: string
                    tls:
                      description: TLS configuration. Currently the Ingress only supports
                        a single TLS port, 443. If multiple members of this list specify
                        different hosts, they will be multiplexed on the same port
                        according to the hostname specified through the SNI TLS extension,
                        if the ingress controller fulfilling the ingress supports
                        SNI.
                      items:
                        description: IngressTLS describes the transport layer security
                          associated with an Ingress.
                        properties:
                          hosts:
                            description: Hosts are a list of hosts included in the
                              TLS certificate. The values in this list must match
                              the name/s used in the tlsSecret. Defaults to the wildcard
                              host setting for the loadbalancer controller fulfilling
                              this Ingress, if left unspecified.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          secretName:
                            description: SecretName is the name of the secret used
                              to terminate TLS traffic on port 443. Field is left
                              optional to allow TLS routing based on SNI hostname
                              alone. If the SNI host in a listener conflicts with
                              the "Host" header field used by an IngressRule, the
                              SNI host is used for termination and value of the Host
                              header is used for routing.
                            type: string
                        type: object
                      type: array
                  type: object
                serviceSpec:
                  description: ServiceSpec defines the behavior of a service.
                  properties:
                    clusterIP:
                      description: 'clusterIP is the IP address of the service and
                        is usually assigned randomly by the master. If an address
                        is specified manually and is not in use by others, it will
                        be allocated to the service; otherwise, creation of the service
                        will fail. This field can not be changed through updates.
                        Valid values are "None", empty string (""), or a valid IP
                        address. "None" can be specified for headless services when
                        proxying is not required. Only applies to types ClusterIP,
                        NodePort, and LoadBalancer. Ignored if type is ExternalName.
                        More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                      type: string
                    externalIPs:
                      description: externalIPs is a list of IP addresses for which
                        nodes in the cluster will also accept traffic for this service.  These
                        IPs are not managed by Kubernetes.  The user is responsible
                        for ensuring that traffic arrives at a node with this IP.  A
                        common example is external load-balancers that are not part
                        of the Kubernetes system.
                      items:
                        type: string
                      type: array
                    externalName:
                      description: externalName is the external reference that kubedns
                        or equivalent will return as a CNAME record for this service.
                        No proxying will be involved. Must be a valid RFC-1123 hostname
                        (https://tools.ietf.org/html/rfc1123) and requires Type to
                        be ExternalName.
                      type: string
                    externalTrafficPolicy:
                      description: externalTrafficPolicy denotes if this Service desires
                        to route external traffic to node-local or cluster-wide endpoints.
                        "Local" preserves the client source IP and avoids a second
                        hop for LoadBalancer and Nodeport type services, but risks
                        potentially imbalanced traffic spreading. "Cluster" obscures
                        the client source IP and may cause a second hop to another
                        node, but should have good overall load-spreading.
                      type: string
                    healthCheckNodePort:
                      description: healthCheckNodePort specifies the healthcheck nodePort
                        for the service. If not specified, HealthCheckNodePort is
                        created by the service api backend with the allocated nodePort.
                        Will use user-specified nodePort value if specified by the
                        client. Only effects when Type is set to LoadBalancer and
                        ExternalTrafficPolicy is set to Local.
                      format: int32
                      type: integer
                    ipFamily:
                      description: ipFamily specifies whether this Service has a preference
                        for a particular IP family (e.g. IPv4 vs. IPv6) when the IPv6DualStack
                        feature gate is enabled. In a dual-stack cluster, you can
                        specify ipFamily when creating a ClusterIP Service to determine
                        whether the controller will allocate an IPv4 or IPv6 IP for
                        it, and you can specify ipFamily when creating a headless
                        Service to determine whether it will have IPv4 or IPv6 Endpoints.
                        In either case, if you do not specify an ipFamily explicitly,
                        it will default to the cluster's primary IP family. This field
                        is part of an alpha feature, and you should not make any assumptions
                        about its semantics other than those described above. In particular,
                        you should not assume that it can (or cannot) be changed after
                        creation time; that it can only have the values "IPv4" and
                        "IPv6"; or that its current value on a given Service correctly
                        reflects the current state of that Service. (For ClusterIP
                        Services, look at clusterIP to see if the Service is IPv4
                        or IPv6. For headless Services, look at the endpoints, which
                        may be dual-stack in the future. For ExternalName Services,
                        ipFamily has no meaning, but it may be set to an irrelevant
                        value anyway.)
                      type: string
                    loadBalancerIP:
                      description: 'Only applies to Service Type: LoadBalancer LoadBalancer
                        will get created with the IP specified in this field. This
                        feature depends on whether the underlying cloud-provider supports
                        specifying the loadBalancerIP when a load balancer is created.
                        This field will be ignored if the cloud-provider does not
                        support the feature.'
                      type: string
                    loadBalancerSourceRanges:
                      description: 'If specified and supported by the platform, this
                        will restrict traffic through the cloud-provider load-balancer
                        will be restricted to the specified client IPs. This field
                        will be ignored if the cloud-provider does not support the
                        feature." More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/'
                      items:
                        type: string
                      type: array
                    ports:
                      description: 'The list of ports that are exposed by this service.
                        More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                      items:
                        description: ServicePort contains information on service's
                          port.
                        properties:
                          appProtocol:
                            description: The application protocol for this port. This
                              field follows standard Kubernetes label syntax. Un-prefixed
                              names are reserved for IANA standard service names (as
                              per RFC-6335 and http://www.iana.org/assignments/service-names).
                              Non-standard protocols should use prefixed names such
                              as mycompany.com/my-custom-protocol. This is a beta
                              field that is guarded by the ServiceAppProtocol feature
                              gate and enabled by default.
                            type: string
                          name:
                            description: The name of this port within the service.
                              This must be a DNS_LABEL. All ports within a ServiceSpec
                              must have unique names. When considering the endpoints
                              for a Service, this must match the 'name' field in the
                              EndpointPort. Optional if only one ServicePort is defined
                              on this service.
                            type: string
                          nodePort:
                            description: 'The port on each node on which this service
                              is exposed when type=NodePort or LoadBalancer. Usually
                              assigned by the system. If specified, it will be allocated
                              to the service if unused or else creation of the service
                              will fail. Default is to auto-allocate a port if the
                              ServiceType of this Service requires one. More info:
                              https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                            format: int32
                            type: integer
                          port:
                            description: The port that will be exposed by this service.
                            format: int32
                            type: integer
                          protocol:
                            description: The IP protocol for this port. Supports "TCP",
                              "UDP", and "SCTP". Default is TCP.
                            type: string
                          targetPort:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'Number or name of the port to access on
                              the pods targeted by the service. Number must be in
                              the range 1 to 65535. Name must be an IANA_SVC_NAME.
                              If this is a string, it will be looked up as a named
                              port in the target Pod''s container ports. If this is
                              not specified, the value of the ''port'' field is used
                              (an identity map). This field is ignored for services
                              with clusterIP=None, and should be omitted or set equal
                              to the ''port'' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                            x-kubernetes-int-or-string: true
                        required:
                        - port
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - port
                      - protocol
                      x-kubernetes-list-type: map
                    publishNotReadyAddresses:
                      description: publishNotReadyAddresses indicates that any agent
                        which deals with endpoints for this Service should disregard
                        any indications of ready/not-ready. The primary use case for
                        setting this field is for a StatefulSet's Headless Service
                        to propagate SRV DNS records for its Pods for the purpose
                        of peer discovery. The Kubernetes controllers that generate
                        Endpoints and EndpointSlice resources for Services interpret
                        this to mean that all endpoints are considered "ready" even
                        if the Pods themselves are not. Agents which consume only
                        Kubernetes generated endpoints through the Endpoints or EndpointSlice
                        resources can safely assume this behavior.
                      type: boolean
                    selector:
                      additionalProperties:
                        type: string
                      description: 'Route service traffic to pods with label keys
                        and values matching this selector. If empty or not present,
                        the service is assumed to have an external process managing
                        its endpoints, which Kubernetes will not modify. Only applies
                        to types ClusterIP, NodePort, and LoadBalancer. Ignored if
                        type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/'
                      type: object
                    sessionAffinity:
                      description: 'Supports "ClientIP" and "None". Used to maintain
                        session affinity. Enable client IP based session affinity.
                        Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                      type: string
                    sessionAffinityConfig:
                      description: sessionAffinityConfig contains the configurations
                        of session affinity.
                      properties:
                        clientIP:
                          description: clientIP contains the configurations of Client
                            IP based session affinity.
                          properties:
                            timeoutSeconds:
                              description: timeoutSeconds specifies the seconds of
                                ClientIP type session sticky time. The value must
                                be >0 && <=86400(for 1 day) if ServiceAffinity ==
                                "ClientIP". Default value is 10800(for 3 hours).
                              format: int32
                              type: integer
                          type: object
                      type: object
                    topologyKeys:
                      description: topologyKeys is a preference-order list of topology
                        keys which implementations of services should use to preferentially
                        sort endpoints when accessing this Service, it can not be
                        used at the same time as externalTrafficPolicy=Local. Topology
                        keys must be valid label keys and at most 16 keys may be specified.
                        Endpoints are chosen based on the first topology key with
                        available backends. If this field is specified and all entries
                        have no backends that match the topology of the client, the
                        service has no backends for that client and connections should
                        fail. The special value "*" may be used to mean "any topology".
                        This catch-all value, if used, only makes sense as the last
                        value in the list. If this is not specified or empty, no topology
                        constraints will be applied.
                      items:
                        type: string
                      type: array
                    type:
                      description: 'type determines how the Service is exposed. Defaults
                        to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort,
                        and LoadBalancer. "ExternalName" maps to the specified externalName.
                        "ClusterIP" allocates a cluster-internal IP address for load-balancing
                        to endpoints. Endpoints are determined by the selector or
                        if that is not specified, by manual construction of an Endpoints
                        object. If clusterIP is "None", no virtual IP is allocated
                        and the endpoints are published as a set of endpoints rather
                        than a stable IP. "NodePort" builds on ClusterIP and allocates
                        a port on every node which routes to the clusterIP. "LoadBalancer"
                        builds on NodePort and creates an external load-balancer (if
                        supported in the current cloud) which routes to the clusterIP.
                        More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types'
                      type: string
                  type: object
              type: object
            version:
              description: Version of UI.
              type: string
          required:
          - instances
          - version
          type: object
        status:
          description: UIStatus defines the observed state of UI
          properties:
            availableReplicas:
              description: Total number of available pods (ready for at least minReadySeconds)
                targeted by this deployment.
              format: int32
              type: integer
            conditions:
              description: Represents the latest available observations of the underlying
                deployment's current state.
              items:
                description: DeploymentCondition describes the state of a deployment
                  at a certain point.
                properties:
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status
                      to another.
                    format: date-time
                    type: string
                  lastUpdateTime:
                    description: The last time this condition was updated.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of deployment condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            externalIPs:
              description: externalIPs is a list of IP addresses for which nodes in
                the cluster will also accept traffic for this service.
              items:
                type: string
              type: array
            internalAddress:
              type: string
            ports:
              description: Ports that will be exposed by this service.
              items:
                format: int32
                type: integer
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

